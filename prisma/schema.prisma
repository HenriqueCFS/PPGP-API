// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String        @id @default(uuid())
  email            String        @unique
  name             String?
  posts            Post[]
  password         String
  token            String?
  sentMessages     Message[]     @relation(name: "SentMessages")
  receivedMessages Message[]     @relation(name: "ReceivedMessages")
  groups           GroupMember[]
  roles            UserRole[]
}

model Role {
  id    Int        @id @default(autoincrement())
  name  String     @unique
  users UserRole[]
}

model UserRole {
  id     Int    @id @default(autoincrement())
  user   User   @relation(fields: [userId], references: [id])
  userId String
  role   Role   @relation(fields: [roleId], references: [id])
  roleId Int
}

model GroupMember {
  id      String  @id @default(cuid())
  group   Group   @relation(fields: [groupId], references: [id])
  groupId String
  user    User    @relation(fields: [userId], references: [id])
  userId  String
  isAdmin Boolean @default(false)
}

model Group {
  id      String        @id @default(cuid())
  name    String
  members GroupMember[]
}

model Message {
  id         String @id @default(uuid())
  content    String
  senderId   String
  receiverId String
  sender     User   @relation(name: "SentMessages", fields: [senderId], references: [id])
  receiver   User   @relation(name: "ReceivedMessages", fields: [receiverId], references: [id])
}

model Post {
  id        String  @id @default(uuid())
  title     String
  content   String?
  published Boolean @default(false)
  author    User    @relation(fields: [authorId], references: [id])
  authorId  String
}
